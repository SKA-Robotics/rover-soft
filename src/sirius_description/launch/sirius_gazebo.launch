<launch>
    <arg name="world_name" default="$(find leo_gazebo_worlds)/worlds/marsyard2020.world"/>
    <arg name="paused" default="false"/>
    <arg name="use_sim_time" default="true"/>
    <arg name="gui" default="true"/>
    <arg name="headless" default="false"/>
    <arg name="debug" default="false"/>
    <arg name="model" default="$(find sirius_description)/urdf/sirius_2.urdf.xacro"/>
    <arg name="imu_frequency"         default="200.0" />
    <arg name="stereo_fps"            default="30"  />

    <param name="use_sim_time" command="$(arg use_sim_time)" />

    <param name="robot_description" command="$(find xacro)/xacro '$(arg model)' calibration_path:='$(find sirius_cameras)/config/oak_d_w/kalibr_imucam_chain.yaml' stereo_fps:=$(arg stereo_fps) imu_frequency:='$(arg imu_frequency)'" />

    <arg name="rviz" default="true"/>

    <remap from="/sirius/controller/wheels/cmd_vel" to="/cmd_vel" />
    <remap from="/sirius/controller/wheels/odom" to="/odom" />


    <rosparam file="$(find sirius_description)/config/controllers.yaml" command="load"/>
    <rosparam file="$(find sirius_description)/config/sensor_fusion_odom.yaml" command="load" ns="odom_sensor_fusion"/>  
    <rosparam file="$(find sirius_description)/config/sensor_fusion_odom.yaml" command="load" ns="map_sensor_fusion"/>  
    <rosparam file="$(find sirius_description)/config/sensor_fusion_gnss.yaml" command="load" ns="map_sensor_fusion"/>  

    <include file="$(find gazebo_ros)/launch/empty_world.launch">
        <arg name="world_name" value="$(arg world_name)"/>
        <arg name="debug" value="$(arg debug)" />
        <arg name="gui" value="$(arg gui)" />
        <arg name="paused" value="$(arg paused)"/>
        <arg name="use_sim_time" value="$(arg use_sim_time)"/>
        <arg name="headless" value="$(arg headless)"/>
    </include>

    <!-- push robot_description to factory and spawn robot in gazebo -->
    <node name="urdf_spawner" pkg="gazebo_ros" type="spawn_model"
        args="-z 1.5 -unpause -urdf -model robot -param robot_description" respawn="false" output="screen" />

    <node pkg="robot_state_publisher" type="robot_state_publisher"  name="robot_state_publisher">
        <param name="publish_frequency" type="double" value="30.0" />
    </node>
    <node name="controller_spawner" pkg="controller_manager" type="spawner" respawn="false" output="screen" ns="/"
    args="
            /sirius/controller/wheels_left_state
            /sirius/controller/wheels_right_state
            /sirius/controller/wheels
    "/>
    <node if="$(arg rviz)" type="rviz" name="rviz" pkg="rviz" args="-d $(find sirius_description)/rviz/sirius_gazebo.rviz" />
        
    <node pkg="robot_localization" type="navsat_transform_node" name="navsat_transform_node" clear_params="true">
        <remap from="odometry/filtered" to="odometry/filtered_map"/>
        <param name="frequency" value="20"/>
        <param name="delay" value="0.0"/>
        <param name="zero_altitude" value="false"/>
        <param name="broadcast_cartesian_transform" value="true"/>
        <param name="broadcast_cartesian_transform_as_parent_frame" value="true"/>
        <param name="publish_filtered_gps" value="true"/>
        <!-- <param name="wait_for_datum" value="true"/>
        <param name="datum" value="[0, 0, 0.0]"/> -->
        <!-- <param name="datum" value="[38.4190235, -110.7823884, 0.0]"/> -->
    </node> 

</launch>