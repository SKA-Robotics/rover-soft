<?xml version="1.0" encoding="utf-8"?>
<robot xmlns:xacro="http://www.ros.org/wiki/xacro" name="sirius_2">
  <xacro:property name="package" value="sirius_description" />
  <!-- User arguments -->
  <xacro:arg name="calibration_path" default=""/>
  <xacro:arg name="datum" default="[50.878151, 20.642273, 144.41]"/>
  <xacro:arg name="elevation" default="0.0"/>
  <xacro:arg name="imu_frequency" default="200.0"/>
  <xacro:arg name="manipulator" default="true"/>
  <xacro:arg name="joint_prefix" default=""/>
  <xacro:arg name="link_prefix" default=""/>
  <xacro:arg name="robot_ns" default=""/>
  <xacro:arg name="stereo_fps" default="30"/>
  <xacro:arg name="year" default=""/>
  
  <!-- Parse arguments -->
  <xacro:property name="calibration_path" value="$(arg calibration_path)" /> 
  <xacro:if value="${calibration_path != ''}">
    <xacro:property name="calibration" value="${xacro.load_yaml(calibration_path)}" /> 
  </xacro:if>
  <xacro:property name="datum" value="${$(arg datum)}" />
  <xacro:property name="elevation" value="$(arg elevation)" />
  <xacro:property name="imu_frequency" value="$(arg imu_frequency)" />  
  <xacro:property name="manipulator" value="$(arg manipulator)" />
  <xacro:property name="stereo_fps" value="$(arg stereo_fps)" /> 
  <xacro:property name="year" value="$(arg year)" />
  <xacro:property name="link_prefix" value="$(arg link_prefix)" />
  <xacro:property name="robot_ns" value="$(arg robot_ns)" />
  <xacro:property name="joint_prefix" value="$(arg joint_prefix)" />

  <!-- Load model parameters -->
  <xacro:property name="params" value="${xacro.load_yaml('sirius_2.yaml')}" /> 
  <xacro:property name="cameras" value="${xacro.load_yaml('cameras/cameras.yaml')}" />  
  <xacro:property name="collisions" value="${xacro.load_yaml('sirius_2/sirius_2_collisions.yaml')}" /> 

  <!-- Load inertial parameters -->
  <xacro:property name="inertial" value="${xacro.load_yaml('sirius_2/sirius_2_inertial.yaml')}" />
  <xacro:property name="cameras_inertial" value="${xacro.load_yaml('cameras/cameras_inertial.yaml')}" /> 
  
  <!-- Load materials -->
  <xacro:include filename="materials.urdf.xacro" />

  <!-- Load subcomponents xacro -->
  <xacro:include filename="sirius_2/indicator_light.urdf.xacro" />
  <xacro:include filename="sirius_2/platform.urdf.xacro" />
  <xacro:if value="${manipulator}">
    <xacro:include filename="manipulator.urdf.xacro" />
  </xacro:if>

  <!-- Load sensors and cameras xacro -->
  <xacro:include filename="cameras/hp_4310.urdf.xacro" />
  <xacro:include filename="cameras/oak-d-w.urdf.xacro" />
  <xacro:include filename="sirius_2/gnss.urdf.xacro" />

  <!-- Macro to simplify joint definition -->
  <xacro:macro name="joint" params="name:='' type:='fixed' parent:='base_link' child:='' xyz:='0 0 0' rpy:='0 0 0' axis:='0 0 1' limit_effort:='0.0' limit_velocity:='0.0'">
    <joint name="${name}" type="${type}">
      <parent link="${parent}"/>
      <child link="${child}"/>
      <origin xyz="${xyz}" rpy="${rpy}"/>
      <axis xyz="${axis}"/>
      <xacro:if value="${type != 'fixed'}">
        <limit effort="${limit_effort}" velocity="${limit_velocity}"/>
      </xacro:if>
    </joint>
  </xacro:macro>

  <!-- Macro to combine suspension and wheel -->
  <xacro:macro name="drive_system" params="flip_x:=false flip_y:=false prefix:='' params:=^">
    <xacro:include filename="sirius_2/suspension.urdf.xacro" />
    <xacro:include filename="sirius_2/wheel.urdf.xacro" />
    
    <xacro:suspension prefix="${prefix}" material="dark_bronze" flip="${flip_y}" />
    <xacro:wheel prefix="${prefix}" material="dark_gray" material_rim="white" flip="${flip_x}" />

    <xacro:joint  name="${prefix}_wheel_joint" 
                  type="continuous" 
                  parent="${prefix}_suspension" 
                  child="${prefix}_wheel" 
                  xyz="${(1 - 2 * flip_y)  * (params['wheel_base'] - params['suspension_separation_x'])/2 } ${(1 - 2 * flip_x)  * (params['track'] - params['suspension_separation_y'])/2} ${-params['suspension_height']}" 
                  rpy="0 0 0" 
                  axis="0 1 0"
                  limit_effort="18.0"
                  limit_velocity="8.0" />

    <transmission name="${prefix}_wheel_transmission">
      <type>transmission_interface/SimpleTransmission</type>
      <actuator name="${prefix}_wheel_motor">
        <mechanicalReduction>1</mechanicalReduction>
      </actuator>
      <joint name="${prefix}_wheel_joint">
      <hardwareInterface>hardware_interface/VelocityJointInterface</hardwareInterface>
      </joint>
    </transmission>
  </xacro:macro>

  <!-- Define subcomponents links -->
  <link name="base_link" />
  <xacro:platform material="white" />
  <xacro:drive_system prefix="left_back" flip_y="true" />
  <xacro:drive_system prefix="left_front" />
  <xacro:drive_system prefix="right_back" flip_x="true" flip_y="true"/>
  <xacro:drive_system prefix="right_front"  flip_x="true"/>
  <xacro:indicator_light material="gray" />
  <xacro:if value="${manipulator}">
    <xacro:manipulator prefix="manipulator"/>
  </xacro:if>

  <!-- Define sensors and cameras links -->
  <xacro:hp_4310 prefix="back_mast" material="black" />
  <xacro:hp_4310 prefix="front_mast" material="black" />
  <xacro:oak-d-w prefix="front"/>
  <xacro:gnss material="gray" />

  <!-- Define subcomponents joints -->
  <xacro:joint name="base_link_to_platform" 
               child="platform" 
               xyz="0 0 ${params['wheel_radius'] + params['suspension_height'] - params['suspension_z']}" />
  <xacro:joint name="base_to_left_back_suspension" 
               parent="platform" 
               child="left_back_suspension" 
               xyz="${-params['suspension_separation_x']/2} ${params['suspension_separation_y']/2} ${params['suspension_z']}" />
  <xacro:joint name="base_to_left_front_suspension" 
               parent="platform" 
               child="left_front_suspension" 
               xyz="${params['suspension_separation_x']/2} ${params['suspension_separation_y']/2} ${params['suspension_z']}" /> 
  <xacro:joint name="base_to_right_back_suspension" 
               parent="platform" 
               child="right_back_suspension" 
               xyz="${-params['suspension_separation_x']/2} ${-params['suspension_separation_y']/2} ${params['suspension_z']}" />
  <xacro:joint name="base_to_right_front_suspension" 
               parent="platform" 
               child="right_front_suspension" 
               xyz="${params['suspension_separation_x']/2} ${-params['suspension_separation_y']/2} ${params['suspension_z']}" /> 
  <xacro:joint name="base_to_indicator_light" 
               parent="platform" 
               child="indicator_light" 
               xyz="${params['indicator_light_xyz']}"/>
  <xacro:if value="${manipulator}">
    <xacro:joint name="base_to_manipulator" 
                 parent="platform" 
                 child="manipulator_base" 
                 xyz="${params['manipulator_xyz']}" 
                 rpy="${params['manipulator_rpy']}"/>
  </xacro:if>

  <!-- Define sensors and cameras joints -->
  <xacro:joint name="base_to_front_mast_camera" 
               parent="platform" 
               child="front_mast_camera" 
               xyz="${params['front_mast_camera_xyz']}" 
               rpy="${params['front_mast_camera_rpy']}"/>
  <xacro:joint name="base_to_back_mast_camera" 
               parent="platform" 
               child="back_mast_camera" 
               xyz="${params['back_mast_camera_xyz']}" 
               rpy="${params['back_mast_camera_rpy']}"/>
  <xacro:joint name="base_to_front_camera" 
               parent="platform" 
               child="front_camera_center" 
               xyz="${params['front_camera_xyz']}" 
               rpy="${params['front_camera_rpy']}"/>
  <xacro:joint name="base_to_gnss" child="gnss" xyz="${params['gnss_xyz']}" />

  <!-- Gazebo plugins -->
  <gazebo> 
    <!-- hardware interfaces for wheels -->
    <plugin name="gazebo_ros_control" filename="libgazebo_ros_control.so">
      <robotNamespace>/</robotNamespace>
    </plugin>
    <!-- Ground truth pose for base_link -->
    <plugin name="p3d_plugin" filename="libsirius_gazebo_ros_p3d.so">
      <alwaysOn>true</alwaysOn>
      <updateRate>100.0</updateRate>
      <bodyName>base_link</bodyName>
      <topicName>ground_truth</topicName>
      <frameName>map</frameName>
      <frameRpyOffset>0 0 ${datum[2] * pi/180}</frameRpyOffset>
    </plugin>
  </gazebo>
</robot>
