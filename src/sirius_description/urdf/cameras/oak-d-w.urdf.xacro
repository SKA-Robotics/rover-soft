<?xml version="1.0"?>
<robot xmlns:xacro="http://ros.org/wiki/xacro">

  <xacro:property name="baseline" value="0.075"/>
  <xacro:property name="optical_offset_x" value="-0.01" />

  <xacro:macro name="oak-d-w" params="prefix:=oak-d-w package:=^ cameras:=^ cameras_inertial:=^">

    <link name="${prefix}_camera_center">
      <visual>
        <geometry>
          <mesh filename="package://${package}/meshes/cameras/OAK-D-W.stl"/>
        </geometry>
        <origin xyz="${cameras['oak-d-w_thickness']/2} 0 0" rpy="-${pi/2} ${pi} -${pi/2}"/>
      </visual>
      <collision>
        <geometry>
          <box size="${cameras['oak-d-w_thickness']} ${cameras['oak-d-w_width']} ${cameras['oak-d-w_height']}"/>
        </geometry>
      </collision>
      <inertial>
        <mass value="${cameras_inertial['oak-d-w_mass']}"/>
        <inertia ixx="${cameras_inertial['oak-d-w_inertia']['ixx']}" ixy="${cameras_inertial['oak-d-w_inertia']['ixy']}" ixz="${cameras_inertial['oak-d-w_inertia']['ixz']}" iyy="${cameras_inertial['oak-d-w_inertia']['iyy']}" iyz="${cameras_inertial['oak-d-w_inertia']['iyz']}" izz="${cameras_inertial['oak-d-w_inertia']['izz']}"/>
      </inertial>
    </link>

    <link name="${prefix}_left_camera_frame" />
    <link name="${prefix}_left_camera_optical_frame"/>

    <link name="${prefix}_right_camera_frame" />
    <link name="${prefix}_right_camera_optical_frame"/>
    <link name="${prefix}_imu_frame"/>


    <joint name="${prefix}_left_camera_joint" type="fixed">
      <parent link="${prefix}_camera_center"/>
      <child link="${prefix}_left_camera_frame"/>
      <origin xyz="0 ${baseline/2} 0" rpy="0 0 0" />
    </joint>
    <joint name="${prefix}_left_camera_optical_joint" type="fixed">
      <origin xyz="${optical_offset_x} 0 0" rpy="-${pi/2} 0.0 -${pi/2}"/>
      <parent link="${prefix}_left_camera_frame"/>
      <child link="${prefix}_left_camera_optical_frame"/>
    </joint>

    <joint name="${prefix}_right_camera_joint" type="fixed">
      <parent link="${prefix}_camera_center"/>
      <child link="${prefix}_right_camera_frame"/>
      <origin xyz="0 -${baseline/2} 0" rpy="0 0 0" />
    </joint>
    <joint name="${prefix}_right_camera_optical_joint" type="fixed">
      <origin xyz="${optical_offset_x} 0 0" rpy="-${pi/2} 0.0 -${pi/2}"/>
      <parent link="${prefix}_right_camera_frame"/>
      <child link="${prefix}_right_camera_optical_frame"/>
    </joint>
    <joint name="${prefix}_imu_frame_joint" type="fixed">
      <!-- IMU frame offset copied from ZED2 camera -->
      <origin xyz="-0.002 -0.023 -0.002" rpy="0.0014025 -0.0000012 -0.0016915"/>
      <parent link="${prefix}_left_camera_frame"/>
      <child link="${prefix}_imu_frame"/>
    </joint>

    <!-- Left/Depth camera -->
    <gazebo reference="${prefix}_left_camera_frame">
      <!-- Raw images (with lens distortion) -->
      <sensor type="camera" name="${prefix}_left_camera_image_raw">
        <always_on>true</always_on>
        <update_rate>15.0</update_rate>
        <visualize>false</visualize> 
        <camera name="/${prefix}_camera/left_raw">
          <horizontal_fov>${127 * pi/180}</horizontal_fov>
          <image>
            <width>1280</width>
            <height>800</height>
            <format>L8</format>
          </image>
          <clip>
            <near>0.02</near>
            <far>300</far>
          </clip>
          <noise>
            <type>gaussian</type>
            <mean>0.0</mean>
            <stddev>0.007</stddev>
          </noise>
          <distortion>
            <!-- Values copied from ZED2 camera -->
            <k1>-0.043693598</k1>
            <k2>0.0146164996</k2>
            <p1>-0.006573319</p1>
            <p2>-0.000216900</p2>
            <k3>0.000084328</k3>
            <center>0.5 0.5</center>
          </distortion>
        </camera>
        <plugin name="camera_controller" filename="libgazebo_ros_camera.so">
          <cameraName>/${prefix}_camera/left_raw</cameraName>
          <imageTopicName>image_raw_gray</imageTopicName>
          <cameraInfoTopicName>camera_info</cameraInfoTopicName>
          <frameName>${prefix}_left_camera_optical_frame</frameName>
          <distortionK1>-0.043693598</distortionK1>
          <distortionK2>0.0146164996</distortionK2>
          <distortionT1>-0.006573319</distortionT1>
          <distortionT2>-0.000216900</distortionT2>
          <distortionK3>0.000084328</distortionK3>
          <CxPrime>648.5</CxPrime>
          <Cx>648.5</Cx>
          <Cy>366.8340148925781</Cy>
          <hackBaseline>0.0</hackBaseline>
        </plugin>
      </sensor>

      <sensor type="depth" name="${prefix}_camera_depth">
        <!-- Rectified images, Depth images, Point Clouds -->
        <always_on>true</always_on>
        <update_rate>15.0</update_rate>
        <visualize>false</visualize> 
        <camera name="/${prefix}_camera/depth">
          <horizontal_fov>${127 * pi/180}</horizontal_fov>
          <image>
            <width>1280</width>
            <height>800</height>
            <format>L8</format>
          </image>
          <clip>
            <near>0.02</near>
            <far>300</far>
          </clip>
          <noise>
            <type>gaussian</type>
            <mean>0.0</mean>
            <stddev>0.007</stddev>
          </noise>
        </camera>
        <plugin name="camera_controller" filename="libgazebo_ros_openni_kinect.so">
          <cameraName>/${prefix}_camera</cameraName>
          <imageTopicName>left/image_rect_gray</imageTopicName>
          <cameraInfoTopicName>left/camera_info</cameraInfoTopicName>
          <depthImageTopicName>depth/depth_registered</depthImageTopicName>
          <depthImageInfoTopicName>depth/camera_info</depthImageInfoTopicName>
          <pointCloudTopicName>point_cloud/cloud_registered</pointCloudTopicName>
          <pointCloudCutoff>0.35</pointCloudCutoff>
          <pointCloudCutoffMax>35.0</pointCloudCutoffMax>
          <frameName>${prefix}_left_camera_optical_frame</frameName>
          <baseline>${baseline}</baseline>
          <CxPrime>658.8206787109375</CxPrime>
          <Cx>658.8206787109375</Cx>
          <Cy>372.25787353515625</Cy>
          <hackBaseline>0.0</hackBaseline>
        </plugin>
      </sensor>
    </gazebo>

    <!-- Right camera -->
    <gazebo reference="${prefix}_right_camera_frame">
      <!-- Raw images (with lens distortion) -->
      <sensor type="camera" name="${prefix}_left_camera_raw">
        <always_on>true</always_on>
        <update_rate>15.0</update_rate>
        <visualize>false</visualize> 
        <camera name="/${prefix}_camera/right_raw">
          <horizontal_fov>${127 * pi/180}</horizontal_fov>
          <image>
            <width>1280</width>
            <height>800</height>
            <format>L8</format>
          </image>
          <clip>
            <near>0.02</near>
            <far>300</far>
          </clip>
          <noise>
            <type>gaussian</type>
            <mean>0.0</mean>
            <stddev>0.007</stddev>
          </noise>
          <distortion>
            <k1>-0.040993299</k1>
            <k2>0.009593590</k2>
            <p1>-0.004429849</p1>
            <p2>0.000192024</p2>
            <k3>-0.000320880</k3>
            <center>0.5 0.5</center>
          </distortion>
        </camera>
        <plugin name="camera_controller" filename="libgazebo_ros_camera.so">
          <cameraName>/${prefix}_camera/right_raw</cameraName>
          <imageTopicName>image_raw_gray</imageTopicName>
          <cameraInfoTopicName>camera_info</cameraInfoTopicName>
          <frameName>${prefix}_right_camera_optical_frame</frameName>
          <distortionK1>-0.040993299</distortionK1>
          <distortionK2>0.009593590</distortionK2>
          <distortionT1>-0.004429849</distortionT1>
          <distortionT2>0.000192024</distortionT2>
          <distortionK3>-0.000320880</distortionK3>
          <CxPrime>659.3049926757812</CxPrime>
          <Cx>659.3049926757812</Cx>
          <Cy>371.39849853515625</Cy>
          <hackBaseline>${baseline}</hackBaseline>
        </plugin>
      </sensor>

      <sensor type="camera" name="${prefix}_right_camera_rect">
        <!-- Rectified images -->
        <always_on>true</always_on>
        <update_rate>15.0</update_rate>
        <visualize>false</visualize> 
        <camera name="/${prefix}_camera/right">
          <horizontal_fov>${127 * pi/180}</horizontal_fov>
          <image>
            <width>1280</width>
            <height>800</height>
            <format>L8</format>
          </image>
          <clip>
            <near>0.02</near>
            <far>300</far>
          </clip>
          <noise>
            <type>gaussian</type>
            <mean>0.0</mean>
            <stddev>0.007</stddev>
          </noise>
        </camera>
        <plugin name="camera_controller" filename="libgazebo_ros_camera.so">
          <cameraName>/${prefix}_camera/right</cameraName>
          <imageTopicName>image_rect_gray</imageTopicName>
          <cameraInfoTopicName>camera_info</cameraInfoTopicName>
          <frameName>${prefix}_right_camera_optical_frame</frameName>
          <CxPrime>658.8206787109375</CxPrime>
          <Cx>658.8206787109375</Cx>
          <Cy>372.25787353515625</Cy>
          <hackBaseline>${baseline}</hackBaseline>
        </plugin>
      </sensor>
    </gazebo>

    <!-- IMU -->
    <gazebo reference="${prefix}_imu_frame">
      <sensor type="imu" name="imu_sensor">
        <update_rate>100</update_rate>
        <plugin filename="libgazebo_ros_imu_sensor.so" name="imu_plugin">
          <topicName>/${prefix}_camera/imu/data</topicName>
          <frameName>${prefix}_imu_frame</frameName>
          <updateRateHZ>100.0</updateRateHZ>
          <gaussianNoise>0.01</gaussianNoise>
          <initialOrientationAsReference>false</initialOrientationAsReference>
          <xyzOffset>0 0.0 0.0</xyzOffset>
          <rpyOffset>0.0 0.0 0.0</rpyOffset>
        </plugin>
      </sensor>
    </gazebo>
    <!-- MAGNETOMETER -->
    <gazebo reference="${prefix}_imu_frame">
      <sensor type="magnetometer" name="magnetometer_sensor">
        <always_on>true</always_on>
        <update_rate>50</update_rate>
        <magnetometer>
          <x>
            <noise type="gaussian">
              <mean>0.0</mean>
              <stddev>5e-7</stddev>
            </noise>
          </x>
          <y>
            <noise type="gaussian">
              <mean>0.0</mean>
              <stddev>5e-7</stddev>
            </noise>
          </y>
          <z>
            <noise type="gaussian">
              <mean>0.0</mean>
              <stddev>5e-7</stddev>
            </noise>
          </z>
        </magnetometer>
        <plugin filename="libgazebo_ros_magnetometer_sensor.so" name="magnetometer_plugin">
          <topicName>/${prefix}_camera/imu/mag</topicName>
          <frameName>${prefix}_imu_frame</frameName>
          <updateRateHZ>50.0</updateRateHZ>
        </plugin>
      </sensor>
    </gazebo>

  </xacro:macro>

</robot>